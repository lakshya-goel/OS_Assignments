Description of the program logic:

First a new syscall entry is added to : syscall_64.tbl
# 451 kernel_2D_memcpy sys_kernel_2D_memcpy

then, the required syscall to copy a 2D matrix is implemented in: sys.c
The code of implemented syscall is attached.

After that, a fresh kernel is compiled to reflect the new set of syscalls.
code used:
# make
# make modules
# make modules_install
# make bzImage
# cp -v arch/x86/boot/bzImage /boot/vmlinuz-linuxAB
# cp /etc/mkinitcpio.d/linux.preset /etc/mkinitcpio.d/linuxAB.preset
# nano /etc/mkinitcpio.d/linuxAB.preset
# # mkinitcpio -p linuxAB

The syscall is tested via a test file: test.c
The code of the tester file is also attached.

The diff is used to form two patch files( sys_c.patch and syscall_64_tbl.patch )
Code used:
# mkdir old_kernel
# cp -a old_kernel
# diff -u linux.6.0.3/kernel/sys.c old_kernel/linux.6.0.3/kernel/sys.c >patch1.patch
# diff -u linux.6.0.3/arch/x86/entry/syscalls/syscall_64.tbl old_kernel/linux.6.0.3/arch/x86/entry/syscalls/syscall_64.tbl >patch2.patch
